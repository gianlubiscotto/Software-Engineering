        -:    0:Source:DAG-make.tpp
        -:    0:Graph:DAG-main-test.gcno
        -:    0:Data:DAG-main-test.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <iostream> //for debugging
        -:    2:#include "functions.h"
        -:    3:#include "DAG.h"
        -:    4:
        -:    5:template <typename R> 
function _ZN3DAGIiE4makeERK2BRIiE called 1 returned 100% blocks executed 100%
        1:    6:N DAG<R>::make(const BR<R>& B)
        -:    7:{
        1:    8:	cout<<"make0"<<endl;
call    0 returned 100%
call    1 returned 100%
        1:    9:    return 1;
        -:   10:}
        -:   11:
        -:   12:template <typename R> 
function _ZN3DAGIiE4makeERK2BRIiEj called 2 returned 100% blocks executed 90%
        2:   13:N DAG<R>::make(const BR<R>& B,N l)
        -:   14:{
        2:   15:    if (l==0)
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        -:   16:    {
        1:   17:		cout<<"make1"<<endl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        2:   18:        Leaf<R> X;
call    0 returned 100%
call    1 returned 100%
        1:   19:        return 1;
        -:   20:    }
        1:   21:	cout<<"make2"<<endl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        2:   22:    Node<R> X;
call    0 returned 100%
call    1 returned 100%
call    2 never executed
        1:   23:    N u=1;
        1:   24:    R min=B.x[l].l, max=B.x[l].u;
call    0 returned 100%
call    1 returned 100%
        1:   25:    X.x.push_back(min);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   26:    X.ux.push_back(u);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   27:    if (min<max)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:   28:    {
        1:   29:		cout<<"make3"<<endl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        1:   30:        X.x.push_back(max);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   31:        X.ux.push_back(u);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   32:        X.u.push_back(u);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   33:    }
        1:   34:	cout<<"make4"<<endl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        1:   35:    return 1;
        -:   36:}
        -:   37:
